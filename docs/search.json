[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Memo: Swing States Project and Estimating PID",
    "section": "",
    "text": "Several decisions regarding methods and data remain to be made for the swing states project. This memo outlines the current state of the project and the decisions that need to be made. The main remaining issue is determining what geographic level we can feasibly use in poststratification to then aggregate to state-level estimates of partisanship."
  },
  {
    "objectID": "index.html#available-data",
    "href": "index.html#available-data",
    "title": "Memo: Swing States Project and Estimating PID",
    "section": "Available Data",
    "text": "Available Data\n\nPolling Data\nBecause our main and perhaps only consistent source of polling data is the ANES data, it would be helpful to bolster the years of the ANES time-series that have smaller smaller samples by combining them with other polls. This section discusses the available polling data and its limitations.\n\nExisting Estimates\nPacheco (2014) provides poll-based estimates for the proportion of Democrat identifiers out of all partisans (Republicans Democrats, and Independents) for 1978 to 2010. These estimates are primarily based on CBS/NYT polls. They utilize an older and less accurate approach to MRP that does not utilize multiple deep interactions when specifying the multilevel model (called “deep MRP”) (see Goplerud 2023), and they don’t account for the sampling design of the polls (Auslen 2023; Stollwerk n.d.), making them of limited use for our purposes.\n\n\nCooperative Congressional Election Study\n\nLarge sample size and an approximately simple random sample make it very reliable\n\nMRP provides little improvement over simple mean estimates of state level public opinion (Gelman n.d.)\nonly available for 2006 to 2020\nBecause sub-state geographies aren’t included, something would need to be done before combining this data with our ANES data where we have sub-state geographies\n\n\n\n\nOther Sources\n\nThe General Social Survey\n\nexcellent temporal coverage for its partisanship variable, going back to 1974\nDoesn’t include state of residence by default\nDoesn’t have a question that parses partisan leaners out of the independent category\nApplying for restricted data access for geocodes may be an option\n\nNationscape data appears to be very promising for geographic coverage, but it only began being collected in 2016.\nRoper Center for Public Opinion Research’s iPoll database of polls.\n\nMany of these are done by news agencies\nquestion wordings vary from those in the ANES, and I haven’t come across leaners being parsed out anywhere in this database\nhaven’t found any surveys that include sub-state geographies\n\n\n\n\nPolling Data Summary\nPolls are sparse and those that are comparable to the ANES are only available for recent years. This is a concern because it limits our ability to increase within-state geographic diversity and decrease missing data at the state level due to some states not being polled in a given year of ANES data. Because we can’t add additional data for the earlier half of our time-series where we need it the most, the utility of adding additional polls is limited. Another concern is the overall balance of the data. If we add additional polls for later years we risk artificially inflating their sample sizes and weighting all model estimates towards the means for later years.\n\n\n\nPublicly Available Registration Data\nOne good source of data would be publicly available registration data, however some states don’t report the partisanship of their registered voters, and the data becomes more sparse the further back in time we go. Figure 1 shows the missingness of the registration data by state and year. Each “row” in the graph represents one state in a given year (1988 to 2020). Of course, leaners are not dealt with in this data.\n\n\n\n\n\n\n\nDemographic Data\nThe availability of census-based demographic data also affects the type of partisanship model we can specify because it determines what geographic breakdowns are possible for poststratification. The table below summarizes the census-based data that is available.\n\n\n\nSummary of Census-based Data availability\n\n\nSource\nDemographics\nCounties\nCensus Tract\n\n\n\n\n1980 Decennial\n1\n1\n1\n\n\n1990 Decennial\n1\n1\n1\n\n\n2000 Decennial\n1\n1\n1\n\n\n2010 Decennial\n0\n1\n1\n\n\n2020 Decennial\n0\n1\n1\n\n\n2008 ACS\n1\n1\n0\n\n\n2012 ACS\n1\n1\n1\n\n\n2016 ACS\n1\n1\n1\n\n\n2020 ACS\n1\n1\n1\n\n\n\n\n\nOne joint distribution of demographics and our chosen sub-national geography is needed for each year of estimates. The demographic variables required to generate joint distributions for poststratifying (age, race, sex, educational attainment) are available in the 1980, 1990, and 2000 but not the 2010 or 2020 decennial censuses. This is likely because the American Community Survey (ACS) replaced the long-form census in 2010. Breakdowns of the needed demographics by geographies smaller than the state are available in all of the decennial censuses, and Google Cloud provides complete breakdowns of these demographics by state, county, and census tract from the ACS. Because of the limitations in the census-based data, it seems best to use decennial censuses for the earlier years and the ACS for the years it is available. For earlier years it will be necessary to interpolate new distributions for the years in between the decennial censuses, as Kastellec et al. (2015) did. Interpolation is also needed for the years between 2000 and 2010, where we would have to use the 2000 decennial census and the 2010 ACS. For years falling between 2010 to 2020 we could use the ACS without interpolation because it is available for every year in that range, or interpolate for the sake of consistency."
  },
  {
    "objectID": "index.html#methodology",
    "href": "index.html#methodology",
    "title": "Memo: Swing States Project and Estimating PID",
    "section": "Methodology",
    "text": "Methodology"
  },
  {
    "objectID": "index.html#preliminary-results",
    "href": "index.html#preliminary-results",
    "title": "Memo: Swing States Project and Estimating PID",
    "section": "Preliminary Results",
    "text": "Preliminary Results\nI have spent some time testing different specifications for the predictive model. The results below are on state-level partisanship using MRP, as well as an estimate using a simple disaggregated mean that was poststratified using the same weights as the other estimates. These models were all fit on a single year of survey data (2012) without including effects for any smaller-order geographies and the postsratified to the state level. Following the same specification as Gelman (n.d.), the baseline model (model 2) is specified as follows:\n\\[\n\\frac{P(Y = k | \\mathbf{X})}{P(Y = K | \\mathbf{X})} =\n\\text{logit}^{-1}\\left(\n\\alpha_{\\rm s[i]}^{\\rm state}\n\\alpha_{\\rm a[i]}^{\\rm age}\n\\alpha_{\\rm r[i]}^{\\rm eth}\n\\alpha_{\\rm e[i]}^{\\rm educ}\n\\beta^{\\rm male} \\cdot {\\rm Male}_{\\rm i}\n\\alpha_{\\rm g[i], r[i]}^{\\rm male.eth}\n\\alpha_{\\rm e[i], a[i]}^{\\rm educ.age}\n\\alpha_{\\rm e[i], r[i]}^{\\rm educ.eth}\n\\right)\n\\]\nwhere:\n\\[\n\\begin{aligned}\n\\alpha_{\\rm s}^{\\rm state} &\\sim {\\rm normal}(\\gamma^0 + \\gamma^{\\rm south} \\cdot {\\rm South}_{\\rm s} + \\gamma^{\\rm northcentral} \\cdot {\\rm NorthCentral}_{\\rm s} + \\gamma^{\\rm west} \\cdot {\\rm West}_{\\rm s} \\\\ & \\quad + \\gamma^{\\rm repvote} \\cdot {\\rm RepVote}_{\\rm s}, \\sigma^{\\rm state}) \\textrm{ for s = 1,...,48}\\\\\n\\alpha_{\\rm a}^{\\rm age} & \\sim {\\rm normal}(0,\\sigma^{\\rm age}) \\textrm{ for a = 1,...,6}\\\\\n\\alpha_{\\rm r}^{\\rm eth} & \\sim {\\rm normal}(0,\\sigma^{\\rm eth}) \\textrm{ for r = 1,...,4}\\\\\n\\alpha_{\\rm e}^{\\rm educ} & \\sim {\\rm normal}(0,\\sigma^{\\rm educ}) \\textrm{ for e = 1,...,5}\\\\\n\\alpha_{\\rm g,r}^{\\rm male.eth} & \\sim {\\rm normal}(0,\\sigma^{\\rm male.eth}) \\textrm{ for g = 1,2 and r = 1,...,4}\\\\\n\\alpha_{\\rm e,a}^{\\rm educ.age} & \\sim {\\rm normal}(0,\\sigma^{\\rm educ.age}) \\textrm{ for e = 1,...,5 and a = 1,...,6}\\\\\n\\alpha_{\\rm e,r}^{\\rm educ.eth} & \\sim {\\rm normal}(0,\\sigma^{\\rm educ.eth}) \\textrm{ for e = 1,...,5 and r = 1,...,4}\\\\\n\\end{aligned}\n\\]\n\n\n\nOverall Performance\n\n\n\n\nmodel\nr\nr (conf. low)\nr (conf. high)\nMAE\n\n\n\n\n1\n0.9289135\n0.9024652\n0.9483844\n0.0462896\n\n\n2\n0.9432210\n0.9218804\n0.9588566\n0.0438672\n\n\n3\n0.9425482\n0.9209649\n0.9583651\n0.0436026\n\n\n4\n0.9403045\n0.9176326\n0.9568762\n0.0471264\n\n\n\n\nBy Party\n\n\n\n\nmodel\nparty\nr\nr (conf. low)\nr (conf. high)\nMAE\n\n\n\n\n1\ndem\n0.7184619\n0.5457332\n0.8326247\n0.0498917\n\n\n1\nind\n0.2020227\n-0.0871124\n0.4597661\n0.0345538\n\n\n1\nrep\n0.6018159\n0.3832087\n0.7565782\n0.0544234\n\n\n2\ndem\n0.7706026\n0.6228424\n0.8652800\n0.0502088\n\n\n2\nind\n0.1410688\n-0.1490398\n0.4088171\n0.0351274\n\n\n2\nrep\n0.7261827\n0.5569696\n0.8375107\n0.0462654\n\n\n3\ndem\n0.7663648\n0.6164662\n0.8626556\n0.0500927\n\n\n3\nind\n0.1870538\n-0.1025302\n0.4474094\n0.0342189\n\n\n3\nrep\n0.7221757\n0.5511302\n0.8349771\n0.0464962\n\n\n4\ndem\n0.7585649\n0.6026834\n0.8586812\n0.0558194\n\n\n4\nind\n0.2336555\n-0.0573601\n0.4880735\n0.0375505\n\n\n4\nrep\n0.7837808\n0.6408550\n0.8741888\n0.0480092"
  },
  {
    "objectID": "index.html#to-do",
    "href": "index.html#to-do",
    "title": "Memo: Swing States Project and Estimating PID",
    "section": "To do",
    "text": "To do\n\nOperationalizing “swinginess”"
  },
  {
    "objectID": "val_mrp-spec.html",
    "href": "val_mrp-spec.html",
    "title": "",
    "section": "",
    "text": "Prep for Poststratify\npoststrat_df <- read_csv(“data-collection/data/input/pid/output/poststratdf-12.csv”) #nolint poststrat_df$year <- 2012\n\n\nload models\nload(“/home/reed/Dropbox/01-samara-ra/data-collection/models/weighted/baseline-w.RData”) load(“/home/reed/Dropbox/01-samara-ra/data-collection/models/weighted/stpreds-w.RData”) load(“/home/reed/Dropbox/01-samara-ra/data-collection/models/weighted/stpreds-plus-w.RData”) load(“/home/reed/Dropbox/01-samara-ra/data-collection/models/weighted/stpreds-christian-w.RData”) load(“/home/reed/Dropbox/01-samara-ra/data-collection/models/other/spec1-res.RData”) load(“/home/reed/Dropbox/01-samara-ra/data-collection/models/other/spec2-res.RData”) load(“/home/reed/Dropbox/01-samara-ra/data-collection/models/other/spec3-res.RData”) load(“/home/reed/Dropbox/01-samara-ra/data-collection/models/other/spec4-res.RData”)\nbaseline <- baseline_w stpreds <- stpreds_w stpreds_plus <- stpreds_plus_w stpreds_christian <- stpreds_christian_w\n\n\nsource poststratification functions\nsource(“/home/reed/Dropbox/01-samara-ra/data-collection/scripts/pid/modeling-functions.r”)\n\n\nadd state-level predictors to the poststratification frame\n\n\nadd state abbreviation\nfips <- read.csv(“data-collection/data/input/helpers/us-state-ansi-fips.csv”) fips <- fips |> select(-st, abbr = stusps) fips\\(abbr <- fips\\)abbr |> str_trim() poststrat_df <- poststrat_df |> left_join( fips, by = c(“state” = “stname”) ) # add state-level predictors, except region and pct_christian state_df <- rio::import(“data-collection/data/final.csv”) poststrat_df <- poststrat_df |> left_join( state_df |> select( state, year, rep_vote_share, pct_black, pct_urban_pop ), by = c(“state”, “year”) ) # add region region_df <- rio::import(“data-collection/data/input/state-region.csv”) region_df <- region_df |> filter(abbr != “AK”, abbr != “HI”) poststrat_df <- poststrat_df |> left_join( region_df, by = “abbr” ) # add pct_christian load(“/home/reed/Dropbox/01-samara-ra/data-collection/data/output/christian-2012.rds”) poststrat_df <- poststrat_df |> left_join( christian_2012, by = “abbr” ) view(poststrat_df) ################################################################################ # Prep test data\n\n\nload training and testing data\nload(“/home/reed/Dropbox/01-samara-ra/data-collection/data/input/pid/input/ces/train-test.RData”)\ntest <- test_5000 train <- train_5000\n\n\nrecode\ntest\\(dem_lean <- NA test\\)dem_lean[test\\(pid_lean == \"Dem\"] <- 1 test\\)dem_lean[test\\(pid_lean != \"Dem\"] <- 0 test\\)rep_lean <- NA test\\(rep_lean[test\\)pid_lean == “Rep”] <- 1 test\\(rep_lean[test\\)pid_lean != “Rep”] <- 0 test\\(ind_lean <- NA test\\)ind_lean[test\\(pid_lean == \"Ind\"] <- 1 test\\)ind_lean[test$pid_lean != “Ind”] <- 0 disag_state_test <- test |> group_by(state, eth, male, educ, age) |> summarize( pct_dem = sum(dem_lean) / n(), pct_rep = sum(rep_lean) / n(), pct_ind = sum(ind_lean) / n() ) # join poststrat. table to survey summary of cells poststrat_df_baseline <- poststrat_df |> select( eth, male, educ, age, state, n ) disag_state_test <- disag_state_test |> left_join( poststrat_df_baseline, by = c(“eth”, “male”, “educ”, “age”, “state”) ) # poststratify disag_state_test <- disag_state_test |> group_by(state) |> summarize( pct_dem_post = sum(n * pct_dem) / sum(n), pct_rep_post = sum(n * pct_rep) / sum(n), pct_ind_post = sum(n * pct_ind) / sum(n) ) disag_state_test <- disag_state_test |> group_by(state) |> summarize( dem_est = mean(pct_dem_post), rep_est = mean(pct_rep_post), ind_est = mean(pct_ind_post) ) # get a dataframe for each party ID disag_state_test_dem <- disag_state_test |> select( state, truth_col = dem_est ) disag_state_test_rep <- disag_state_test |> select( state, truth_col = rep_est ) disag_state_test_ind <- disag_state_test |> select( state, truth_col = ind_est )\n\n\n\n\n\nPoststratify\n\n\n\n\n\nDisaggregated\n\n\nrecode\ntrain\\(dem_lean <- NA train\\)dem_lean[train\\(pid_lean == \"Dem\"] <- 1 train\\)dem_lean[train\\(pid_lean != \"Dem\"] <- 0 train\\)rep_lean <- NA train\\(rep_lean[train\\)pid_lean == “Rep”] <- 1 train\\(rep_lean[train\\)pid_lean != “Rep”] <- 0 train\\(ind_lean <- NA train\\)ind_lean[train\\(pid_lean == \"Ind\"] <- 1 train\\)ind_lean[train$pid_lean != “Ind”] <- 0 disag_state_post <- train |> group_by(state, eth, male, educ, age) |> summarize( pct_dem = sum(dem_lean) / n(), pct_rep = sum(rep_lean) / n(), pct_ind = sum(ind_lean) / n() ) # join poststrat. table to survey summary of cells poststrat_df_baseline <- poststrat_df |> select( eth, male, educ, age, state, n ) disag_state_post <- disag_state_post |> left_join( poststrat_df_baseline, by = c(“eth”, “male”, “educ”, “age”, “state”) ) # poststratify disag_state_post <- disag_state_post |> group_by(state) |> summarize( pct_dem_post = sum(n * pct_dem) / sum(n), pct_rep_post = sum(n * pct_rep) / sum(n), pct_ind_post = sum(n * pct_ind) / sum(n) ) disag_state_post <- disag_state_post |> group_by(state) |> summarize( dem_est = mean(pct_dem_post), rep_est = mean(pct_rep_post), ind_est = mean(pct_ind_post) ) ################################################################################ ########## # Baseline baseline_state_output <- estimate_state_pid( baseline, poststrat_df ) ########## # stpreds (region and rep_vote_share) stpreds_state_output <- estimate_state_pid( stpreds, poststrat_df ) ########## # stpreds_plus_w stpreds_plus_state_output <- estimate_state_pid( stpreds_plus, poststrat_df ) ########## # stpreds_christian stpreds_christian_state_output <- estimate_state_pid( stpreds_christian, poststrat_df ) ################################################################################ # other model spec. testing ########## # spec 1 spec1_state_output <- estimate_state_pid( spec1, poststrat_df ) ########## # spec 2 spec2_state_output <- estimate_state_pid( spec2, poststrat_df ) ########## # spec 3 spec3_state_output <- estimate_state_pid( spec3, poststrat_df ) ########## # spec 4 spec4_state_output <- estimate_state_pid( spec4, poststrat_df ) ################################################################################ # prep data for presenting results\n\n\n\n\n\nSplit data by party and model for “compare to truth” plots in the analysis doc\n\n\nDisaggregated data\ndisag_state_dem <- disag_state_post |> select( state, mean_pid = dem_est ) disag_state_rep <- disag_state_post |> select( state, mean_pid = rep_est ) disag_state_ind <- disag_state_post |> select( state, mean_pid = ind_est ) # Baseline data baseline_state_dem <- baseline_state_output |> filter( party == “dem” ) baseline_state_rep <- baseline_state_output |> filter( party == “rep” ) baseline_state_ind <- baseline_state_output |> filter( party == “ind” ) # Stpreds data stpreds_state_dem <- stpreds_state_output |> filter( party == “dem” ) stpreds_state_rep <- stpreds_state_output |> filter( party == “rep” ) stpreds_state_ind <- stpreds_state_output |> filter( party == “ind” ) # stpreds_plus data stpreds_plus_state_dem <- stpreds_plus_state_output |> filter( party == “dem” ) stpreds_plus_state_rep <- stpreds_plus_state_output |> filter( party == “rep” ) stpreds_plus_state_ind <- stpreds_plus_state_output |> filter( party == “ind” )\n\n\n\n\n\ncombine data to analyze error, performance scores, etc…\n\n\n\n\n\nmain models\nstpreds_plus <- stpreds_plus_state_output |> mutate( model = “3” ) stpreds <- stpreds_state_output |> mutate( model = “2” ) baseline <- baseline_state_output |> mutate( model = “1” ) christian <- stpreds_christian_state_output |> mutate( model = “4” ) mrp_results <- rbind( stpreds_plus, stpreds, baseline, christian ) mrp_results <- mrp_results |> select( model, state, party, mean_pid, se_pid = se ) ########## # other model spec. testing (mostly tweaks stpreds_plus) spec1 <- spec1_state_output |> mutate( model = “int. eth:blk” ) spec2 <- spec2_state_output |> mutate( model = “urban + christian” ) spec3 <- spec3_state_output |> mutate( model = “urban only” ) spec4 <- spec4_state_output |> mutate( model = “pct. black only” ) other_spec_results <- rbind( spec1, spec2, spec3, spec4 ) other_spec_results <- other_spec_results |> select( model, state, party, mean_pid, se_pid = se ) ########## # output truth data for comparison all_truth <- disag_state_test |> rename( dem = dem_est, rep = rep_est, ind = ind_est ) |> pivot_longer( cols = c(dem, rep, ind), names_to = “party”, values_to = “truth_pid” )\n\n\n\n\n\noutput\nsave( mrp_results, other_spec_results, all_truth, disag_state_dem, disag_state_rep, disag_state_ind, disag_state_test_dem, disag_state_test_rep, disag_state_test_ind, baseline_state_dem, baseline_state_rep, baseline_state_ind, stpreds_state_dem, stpreds_state_rep, stpreds_state_ind, stpreds_plus_state_dem, stpreds_plus_state_rep, stpreds_plus_state_ind, file = “data-collection/scripts/pid/ces-08to20/model-testing/analysis-w-prep.RData” )"
  }
]